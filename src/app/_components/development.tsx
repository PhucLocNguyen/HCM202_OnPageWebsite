// thanks to oliver: https://www.youtube.com/@olivierlarose1

"use client";
import { ReactLenis } from "lenis/react";
import { useTransform, motion, useScroll, MotionValue } from "framer-motion";
import { JSX, useRef } from "react";
import Image from "next/image";
const projects = [
  {
    title: "Aristotle (384 - 322 BC)",
    description:
      "Aristotle t·ª´ng n√≥i: 'Gi√°o d·ª•c l√† trang b·ªã c√¥ng c·ª• cho t√¢m h·ªìn.' Theo √¥ng, gi√°o d·ª•c kh√¥ng ch·ªâ l√† vi·ªác truy·ªÅn ƒë·∫°t ki·∫øn th·ª©c m√† c√≤n l√† s·ª± r√®n luy·ªán ƒë·∫°o ƒë·ª©c v√† l√Ω tr√≠, gi√∫p con ng∆∞·ªùi h∆∞·ªõng ƒë·∫øn eudaimonia (h·∫°nh ph√∫c t·ªëi th∆∞·ª£ng). √îng nh·∫•n m·∫°nh r·∫±ng, con ng∆∞·ªùi l√† zoon politikon (sinh v·∫≠t ch√≠nh tr·ªã), nghƒ©a l√† con ng∆∞·ªùi ch·ªâ th·ª±c s·ª± ph√°t tri·ªÉn trong m·ªôt c·ªông ƒë·ªìng.",
    src: "https://vi.wikipedia.org/wiki/Aristoteles",
    link: "/assets/image/Aristotle.jpg",
    color: "#5196fd",
  },
  {
    title: "Immanuel Kant (1724 - 1804)",
    description:
      "Immanuel Kant kh·∫≥ng ƒë·ªãnh: ‚ÄúCon ng∆∞·ªùi l√† c·ª©u c√°nh, ch·ª© kh√¥ng ph·∫£i ph∆∞∆°ng ti·ªán.‚Äù T∆∞ t∆∞·ªüng n√†y ph·∫£n √°nh quan ƒëi·ªÉm ƒë·∫°o ƒë·ª©c h·ªçc c·ªßa Kant, n∆°i con ng∆∞·ªùi ƒë∆∞·ª£c xem l√† m·ª•c ƒë√≠ch cu·ªëi c√πng, v√† m·ªçi h√†nh ƒë·ªông ph·∫£i xu·∫•t ph√°t t·ª´ s·ª± t√¥n tr·ªçng ph·∫©m gi√° v√† t·ª± do c·ªßa h·ªç. Kant nh·∫•n m·∫°nh r·∫±ng s·ª± ph√°t tri·ªÉn con ng∆∞·ªùi ph·∫£i bao g·ªìm c·∫£ tri th·ª©c l·∫´n ƒë·∫°o ƒë·ª©c ƒë·ªÉ x√¢y d·ª±ng m·ªôt x√£ h·ªôi b·ªÅn v·ªØng.",
    src: "https://vi.wikipedia.org/wiki/Immanuel_Kant",
    link: "/assets/image/ImmanuelKant.jpg",
    color: "#8f89ff",
  },
  {
    title: "Jean-Jacques Rousseau (1712 - 1778)",
    description:
      "Jean-Jacques Rousseau v·ªõi c√¢u n√≥i n·ªïi ti·∫øng: ‚ÄúCon ng∆∞·ªùi sinh ra t·ª± do, nh∆∞ng ·ªü ƒë√¢u c≈©ng b·ªã tr√≥i bu·ªôc.‚Äù √îng ch·ªâ ra r·∫±ng t·ª± do t·ª± nhi√™n c·ªßa con ng∆∞·ªùi b·ªã gi·ªõi h·∫°n b·ªüi c√°c thi·∫øt ch·∫ø x√£ h·ªôi, v√† ƒë·ªÉ gi·∫£i ph√≥ng kh·ªèi nh·ªØng r√†ng bu·ªôc n√†y, con ng∆∞·ªùi c·∫ßn ƒë∆∞·ª£c gi√°o d·ª•c v√† khai s√°ng, v∆∞·ª£t qua ƒë·ªãnh ki·∫øn v√† t∆∞ duy h·∫°n h·∫πp.",
    src: "https://vi.wikipedia.org/wiki/Jean-Jacques_Rousseau",
    link: "/assets/image/Jean-Jacques-Rousseau.jpg",
    color: "#4caf50",
  },
  {
    title: "John Dewey (1859 ‚Äì 1952)",
    description:
      "John Dewey kh·∫≥ng ƒë·ªãnh: ‚ÄúGi√°o d·ª•c kh√¥ng ph·∫£i l√† chu·∫©n b·ªã cho cu·ªôc s·ªëng m√† l√† cu·ªôc s·ªëng.‚Äù Theo √¥ng, gi√°o d·ª•c kh√¥ng ch·ªâ l√† vi·ªác ti·∫øp thu ki·∫øn th·ª©c m√† c√≤n l√† s·ª± ph√°t tri·ªÉn t∆∞ duy ph·∫£n bi·ªán v√† kh·∫£ nƒÉng gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ trong th·ª±c ti·ªÖn. Dewey nh·∫•n m·∫°nh r·∫±ng gi√°o d·ª•c ph·∫£i k·∫øt h·ª£p l√Ω thuy·∫øt v·ªõi th·ª±c h√†nh, gi√∫p con ng∆∞·ªùi tr∆∞·ªüng th√†nh v√† ph√°t tri·ªÉn trong m·ªôt x√£ h·ªôi d√¢n ch·ªß.",
    src: "https://vi.wikipedia.org/wiki/John_Dewey",
    link: "/assets/image/JohnDewey.jpg",
    color: "#ed649e",
  },
  {
    title: "Albert Einstein (1879 ‚Äì 1955)",
    description:
      "Albert Einstein t·ª´ng n√≥i: ‚ÄúGi√°o d·ª•c l√† ƒëi·ªÅu c√≤n l·∫°i sau khi ch√∫ng ta ƒë√£ qu√™n h·∫øt nh·ªØng g√¨ ƒë√£ h·ªçc trong tr∆∞·ªùng.‚Äù √îng cho r·∫±ng gi√°o d·ª•c kh√¥ng ch·ªâ l√† s·ª± t√≠ch l≈©y ki·∫øn th·ª©c m√† l√† ph√°t tri·ªÉn kh·∫£ nƒÉng t∆∞ duy s√°ng t·∫°o v√† ƒë·∫∑t c√¢u h·ªèi. Einstein tin r·∫±ng con ng∆∞·ªùi c·∫ßn ƒë∆∞·ª£c gi√°o d·ª•c ƒë·ªÉ kh√¥ng ch·ªâ hi·ªÉu bi·∫øt m√† c√≤n ph√°t tri·ªÉn t∆∞ duy ƒë·ªôc l·∫≠p v√† ph·∫£n bi·ªán.",
    src: "https://vi.wikipedia.org/wiki/Albert_Einstein",
    link: "/assets/image/AlbertEinstein.jpg",
    color: "#fd521a",
  },
];
export default function DevelopmentSection(): JSX.Element {
  const container = useRef(null);
  const { scrollYProgress } = useScroll({
    target: container,
    offset: ["start start", "end end"],
  });
  return (
    <ReactLenis root>
      <main className="bg-black" ref={container}>
        <section className="text-white min-h-[70vh] w-full bg-slate-950 grid place-content-center px-4">
          <div className="absolute inset-0 bg-[linear-gradient(to_right,#4f4f4f2e_1px,transparent_1px),linear-gradient(to_bottom,#4f4f4f2e_1px,transparent_1px)] bg-[size:54px_54px] [mask-image:radial-gradient(ellipse_60%_50%_at_50%_0%,#000_70%,transparent_100%)]" />

          <h1 className="text-3xl sm:text-4xl lg:text-5xl 2xl:text-7xl px-4 sm:px-8 font-semibold text-center tracking-tight leading-[120%]">
            Tri·∫øt h·ªçc qua l·ªùi c√°c nh√† t∆∞ t∆∞·ªüng vƒ© ƒë·∫°i. <br /> Kh√°m ph√° ngay! üëá
          </h1>
        </section>

        <section className="text-white w-full bg-slate-950">
          {projects.map((project, i) => {
            const targetScale = 1 - (projects.length - i) * 0.05;
            return (
              <Card
                key={`p_${i}`}
                i={i}
                url={project.link}
                {...project}
                progress={scrollYProgress}
                range={[i * 0.25, 1]}
                targetScale={targetScale}
              />
            );
          })}
        </section>
      </main>
    </ReactLenis>
  );
}
interface CardProps {
  i: number;
  title: string;
  description: string;
  src: string;
  url: string;
  color: string;
  progress: MotionValue<number>;
  range: [number, number];
  targetScale: number;
}
export const Card: React.FC<CardProps> = ({
  i,
  title,
  description,
  src,
  url,
  color,
  progress,
  range,
  targetScale,
}) => {
  const container = useRef(null);
  const { scrollYProgress } = useScroll({
    target: container,
    offset: ["start end", "start start"],
  });

  const imageScale = useTransform(scrollYProgress, [0, 1], [2, 1]);
  const scale = useTransform(progress, range, [1, targetScale]);

  return (
    <div
      ref={container}
      className="min-h-screen flex items-center justify-center sticky top-0 px-4 py-8 lg:py-16"
    >
      <motion.div
        style={{
          backgroundColor: color,
          scale,
          top: `calc(-5vh + ${i * 25}px)`,
        }}
        className="flex flex-col relative -top-[25%] h-auto w-full sm:w-[90%] lg:w-[70%] rounded-md p-4 sm:p-6 lg:p-8 origin-top"
      >
        <h2 className="text-xl sm:text-2xl text-center font-semibold text-black mb-4">
          {title}
        </h2>

        <div className="flex flex-col lg:flex-row h-full gap-4 lg:gap-6">
          <div className="w-full lg:w-[40%] relative flex flex-col justify-between">
            <p className="text-base sm:text-xl">{description}</p>
            <span className="flex items-center gap-2 pt-4">
              <a
                href={src}
                target="_blank"
                className="underline cursor-pointer hover:text-blue-900 text-sm sm:text-base"
                rel="noreferrer"
              >
                Xem chi ti·∫øt th√¥ng tin v·ªÅ nh√† Tri·∫øt H·ªçc
              </a>
              <svg
                width="22"
                height="12"
                viewBox="0 0 22 12"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M21.5303 6.53033C21.8232 6.23744 21.8232 5.76256 21.5303 5.46967L16.7574 0.696699C16.4645 0.403806 15.9896 0.403806 15.6967 0.696699C15.4038 0.989592 15.4038 1.46447 15.6967 1.75736L19.9393 6L15.6967 10.2426C15.4038 10.5355 15.4038 11.0104 15.6967 11.3033C15.9896 11.5962 16.4645 11.5962 16.7574 11.3033L21.5303 6.53033ZM0 6.75L21 6.75V5.25L0 5.25L0 6.75Z"
                  fill="black"
                />
              </svg>
            </span>
          </div>

          <div className="relative w-full lg:w-[60%] aspect-[4/3] lg:aspect-[16/9] rounded-lg overflow-hidden">
            <motion.div className="w-full h-full" style={{ scale: imageScale }}>
              <Image
                fill
                src={url || "/placeholder.svg"}
                alt={title}
                className="object-cover"
                sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
              />
            </motion.div>
          </div>
        </div>
      </motion.div>
    </div>
  );
};
